/**
 * '프로그래머스'는 문제를 푸는게 어려운 사이트가 아니라 문제를 '이해'하기 어렵게 내는 곳 같습니다.
 * 이전에 H-Index도 번역을 이상하게 해서 사람들 뿔이 잔뜩 나있던데, 이 문제도 다들 이해하기 어려워하는 거 보면
 * 문제를 어렵게 내는게 아니라 단순히 이해하기 어렵게 만들어서 난이도를 올리는 거 아닌가..
 *
 * 이 문제를 읽고, 예제를 보면 단순히 영역을 구한다고 생각할 수 있으나 아니었습니다.
 * 각 열은 컴퓨터를 의미합니다.
 * 0번 컴퓨터: [1, 1, 0]
 * 1번 컴퓨터: [1, 1, 0]
 * 2번 컴퓨터: [0, 0, 1]
 * 문제에서 [i][i]는 항상 1이라고 하는데 이는 자기 자신을 의미합니다. 그럼
 * 0번 컴퓨터는 [0][0] = 1 (자기 자신)이며 [0][1] = 1, 즉 1번 컴퓨터와 연결되어있음을 의미합니다.
 * 1번 컴퓨터는 [1][1] = 1 (자기 자신)이며 [1][0] = 1, 즉 0번 컴퓨터와 연결되어있음을 의미합니다.
 * 2번 컴퓨터는 [2][2] = 1 (자기 자신)이며 연결된 컴퓨터가 없음을 의미합니다.
 */

const test_n1 = 3;
const test_computers1 = [
  [1, 1, 0],
  [1, 1, 0],
  [0, 0, 1],
];

// 이 테스트 케이스에 대한 의문으로 풀 수 있었는데..
/**
 * 0번 컴퓨터는 [0][0] = 1 (자기 자신)이며 [0][1] = 1, [0][3] = 1, 즉 1번과 3번 컴퓨터와 연결되어있습니다.
 * 1번 컴퓨터는 [1][1] = 1 (자기 자신)이며 [1][0] = 1, 즉 0번 컴퓨터와 연결되어있음을 의미합니다.
 * 2번 컴퓨터는 [2][2] = 1 (자기 자신)이며 [2][3] = 1, 즉 3번 컴퓨터와 연결되어있음을 의미합니다.
 * 3번 컴퓨터는 [3][3] = 1 (자기 자신)이며 [3][0] = 1, [3][2] = 1, 즉 0번과 3번 컴퓨터와 연결되어있습니다.
 * 
 * 이 테스트 케이스에 대한 정답은 1입니다. 이유는 서로 인접하지 않았으나 간접적으로 연결되어있으면 이는
   연결되어있음을 의미하기 때문입니다.
 * 0번 컴퓨터는 1번 컴퓨터와, 3번 컴퓨터와 연결되어있습니다.
   그런데 2번 컴퓨터는 3번 컴퓨터와 연결되어있습니다. 그럼 0번 컴퓨터는 2번 컴퓨터와 간접적으로 연결되어있는 것입니다.
   다음으로 1번 컴퓨터는 0번 컴퓨터와 연결되어있습니다. 그럼 3번 컴퓨터는 1번 컴퓨터와 간접적으로 연결되어있는 것입니다.

   하..진짜..
 */
const test_n2 = 4;
const test_computers2 = [
  [1, 1, 0, 1],
  [1, 1, 0, 0],
  [0, 0, 1, 1],
  [1, 0, 1, 1],
];

function solution(n, computers) {
  let ans = 0;
  // 각 컴퓨터에 대한 1차원 배열로 방문 여부를 판단.
  const vis = Array(n).fill(false);

  function bfs(start) {
    const queue = [start];
    vis[start] = true;

    while (queue.length > 0) {
      const cur = queue.shift();

      for (let next = 0; next < n; next++) {
        if (computers[cur][next] === 1 && !vis[next]) {
          vis[next] = true;
          queue.push(next);
        }
      }
    }
  }

  for (let i = 0; i < n; i++) {
    if (!vis[i]) {
      bfs(i);
      ans++;
    }
  }

  return ans;
}

const test1 = solution(test_n1, test_computers1);
const test2 = solution(test_n2, test_computers2);

console.log(test1); // Answer: 2 Output: 2
console.log(test2); // Answer: 1 Output: 1

